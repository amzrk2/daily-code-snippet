/**
当有n个人的时候，他们的编号依次是0、1、2、3、4、………、n-1。
假设最后编号为f(n)的人会留下来。

因为数到m的那个人会出列，
那么此轮中编号为(m-1)%n的人会出列，
编号为(m+0)%n的人将做为下一轮编号为0的人，
此轮编号为(m+i)%n的人将做为下一轮编号为i的人…

因此当有n-1个人的时候，
编号为i的人对应着上一轮编号为(m+i)%n的人。

假设此轮编号为f(n-1)的人最终会留下来。
因为编号为f(n-1)的人肯定对应着上一轮的f(n)，
所以有f(n)=(m+f(n-1))%n

有了这个递推公式，那我们就可以一直递推到f(2)=(m+f(1))%2，而f(1)=0
 */

function LastRemaining_Solution(n, m) {
  if (n <= 0) {
    return -1;
  }
  if (n === 1) {
    return 0;
  }
  const res = [0, 0];
  for (let i = 2; i <= n; i++) {
    res.push((m + res[i - 1]) % i);
  }
  return res[n];
}
